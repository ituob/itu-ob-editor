@use "@blueprintjs/core/lib/scss/variables" as bp;
@use "../mixins.scss" as mixins;

$pubColorLight: #3dcc91;
$pubColorDark: #0f9960;
$cutColorLight: #ffb366;
$cutColorDark: #d9822b;

@mixin scheduleFormDateRow($color) {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;

  > :last-child {
    margin-left: 0.5rem;
  }
  > :first-child {
    flex: 1;
    color: $color;
  }
}

@mixin dayWithDot($modifier, $ofColor) {
  &:not(.DayPicker-Day--outside) {
    position: relative;

    &:#{$modifier} {
      background: $ofColor;
      content: "";

      display: block;
      height: 0.4rem;
      width: 0.4rem;
      overflow: hidden;

      position: absolute;
      right: 0.1rem;
      top: 40%;

      @if ($modifier == "after") {
        transform: translateY(-51%);
      } @else {
        transform: translateY(51%);
      }
    }
  }
}

:local .schedulePane {
  @include mixins.pane;
  flex: 1;
}

:local .scheduleForm {
  align-self: stretch;
  display: flex;
  flex-flow: column nowrap;
  align-items: stretch;
  padding: 0.5rem 20px 1rem 20px;
  flex: 1;

  .scheduleFormPublicationDate {
    @include scheduleFormDateRow($pubColorDark);
  }

  .scheduleFormCutoffDate {
    @include scheduleFormDateRow($cutColorDark);
  }

  .scheduleFormBody {
    flex: 1;

    > * {
      flex: 1;
    }
  }

  .scheduleFormActions {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-around;

    > * {
      flex: 1;
    }
  }
}

:local .editDateButton {
  &:focus {
    outline: none !important;
  }
}

.DayPicker-Day--isPublicationDate {
  @include dayWithDot(before, $pubColorDark);
}
.DayPicker-Day--isCutoffDate {
  @include dayWithDot(after, $cutColorDark);
}
.DayPicker-Day--isNewPublicationDate {
  background: $pubColorLight !important;
}
.DayPicker-Day--isNewCutoffDate {
  background: $cutColorLight !important;
}

/* Upcoming issues list */

:local .upcomingIssues {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-around;
}

:global .issueScheduleCardTransition {
  // NOTE: Must match ITEM_ENTRY_EXIT_TRANSITION_DURATION_MS in issue-scheduler/upcoming component
  $duration: 300ms;

  &-enter {
    opacity: 0;
  }
  &-enter-active {
    opacity: 1;
    transition: opacity $duration ease-in !important;
  }
  &-exit {
    opacity: 1;
  }
  &-exit-active {
    opacity: 0;
    transition: opacity $duration ease-in !important;
  }
}

:local .issueCard {
  &:hover {
    z-index: 2;
  }
}

:local .issueCardContents {
  display: flex;
  flex-flow: row nowrap;
  align-items: stretch;

  .issueInfo {
    flex: 1;
  }

  .headerLabel {
    display: flex;
    flex-flow: row nowrap;
  }

  .actions {
    flex-shrink: 0;
    display: flex;
    justify-content: flex-end;
    flex-flow: column nowrap;
    width: bp.$pt-navbar-height * 2;
  }

  .scheduleInfo {
    > * {
      display: flex;
      flex-flow: column nowrap;
    }
  }

  .publicationStatus > * {
    margin-bottom: 0.25rem;
    white-space: nowrap;

    > * {
      display: inline-block;
    }

    &:last-child {
      margin-bottom: 0;
    }
    > :first-child {
      margin-right: 0.5rem;
    }
  }

  .publicationStatusPrimary {
    font-weight: bold;
  }

  .cutoffDate {
    > :first-child {
      color: $cutColorDark;
    }
  }

  .publicationDate {
    > :first-child {
      color: $pubColorDark;
    }
  }
}

:local .pubDateLabel {
  color: $pubColorDark;
}

:local .cutDateLabel {
  color: $cutColorDark;
}

:local .pubDateBordered {
  border-width: 0 0 2px 0;
  border-style: solid;
}

:local .pubDateLabelBordered {
  @extend .pubDateBordered;
  border-color: $pubColorDark;
}

:local .cutDateLabelBordered {
  @extend .pubDateBordered;
  border-color: $cutColorDark;
}
